{"version":3,"sources":["components/Button.jsx","components/SelectDeck.jsx","components/Welcome.jsx","components/Card.jsx","components/Footer.jsx","components/Header.jsx","components/GameScreen.jsx","App.jsx","index.js"],"names":["Button","props","disabled","handleClick","mensagem","onClick","SelectDeck","selectedDeck","setSelectedDeck","decks","deckNames","Object","keys","name","defaultValue","onChange","e","target","value","map","deckName","Welcome","setScreen","useState","setDisabled","useEffect","className","src","alt","Card","pergunta","resposta","numero","setConcluidos","concluidos","sequencia","setSequencia","cards","setFinalizado","setNaoLembrou","etapa","setEtapa","resultado","setResultado","virado","setVirado","length","id","Math","random","Footer","finalizado","naoLembrou","Header","GameScreen","sort","elem","index","key","App","React","Geografia","screen","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.38cf45d7.chunk.js","sourcesContent":["import './Button.css';\nconst Button = (props) => {\n    const { disabled = false, handleClick, mensagem } = props;\n    return (\n        <>\n            {disabled ? (\n                <button onClick={handleClick} disabled>\n                    {mensagem}\n                </button>\n            ) : (\n                <button onClick={handleClick}>{mensagem}</button>\n            )}\n        </>\n    );\n};\n\nexport default Button;\n","import React from 'react';\nimport './SelectDeck.css';\n\nconst SelectDeck = (props) => {\n    const { selectedDeck, setSelectedDeck, decks } = props;\n    const deckNames = Object.keys(decks);\n\n    return (\n        <select\n            name=\"Cars\"\n            defaultValue={selectedDeck}\n            onChange={(e) => {\n                setSelectedDeck(e.target.value);\n            }}\n        >\n            <option value=\"\" disabled>\n                Escolha seu deck\n            </option>\n            {deckNames.map((deckName) => (\n                <option value={deckName} key={deckName}>\n                    {' '}\n                    {deckName}{' '}\n                </option>\n            ))}\n        </select>\n    );\n};\n\nexport default SelectDeck;\n","import React, { useState, useEffect } from 'react';\nimport './Welcome.css';\nimport Button from './Button';\nimport SelectDeck from './SelectDeck';\n\nconst Welcome = (props) => {\n    const { selectedDeck, setScreen, setSelectedDeck, decks } = props;\n    const [disabled, setDisabled] = useState(true);\n\n    useEffect(() => {\n        if (selectedDeck) {\n            setDisabled(false);\n        }\n    }, [selectedDeck]);\n\n    return (\n        <div className=\"welcome-container\">\n            <img src=\"./images/logo.png\" alt=\"logo\" />\n            <h1>ZapRecall</h1>\n            <SelectDeck\n                decks={decks}\n                setSelectedDeck={setSelectedDeck}\n                selectedDeck={selectedDeck}\n            />\n            <Button\n                {...props}\n                disabled={disabled}\n                handleClick={() => setScreen('GameScreen')}\n                mensagem={'Iniciar Recall!'}\n            />\n        </div>\n    );\n};\n\nexport default Welcome;\n","import React, { useState, useEffect } from 'react';\nimport './Card.css';\n\nconst Card = (props) => {\n    const {\n        pergunta,\n        resposta,\n        numero,\n        setConcluidos,\n        concluidos,\n        sequencia,\n        setSequencia,\n        cards,\n        setFinalizado,\n        setNaoLembrou,\n    } = props;\n    const [etapa, setEtapa] = useState('escondido');\n    const [resultado, setResultado] = useState('naoRespondido');\n    const [virado, setVirado] = useState(false);\n\n    useEffect(() => {\n        setFinalizado(cards.length === concluidos);\n    });\n\n    switch (etapa) {\n        case 'escondido':\n            return (\n                <div\n                    className={`card-escondido ${resultado}`}\n                    onClick={() => {\n                        if (resultado === 'naoRespondido') {\n                            setEtapa('pergunta');\n                        }\n                    }}\n                >\n                    <p>Pergunta {numero + 1}</p>\n                    {resultado === 'naoRespondido' && (\n                        <ion-icon name=\"play-outline\"></ion-icon>\n                    )}\n                    {resultado === 'naoLembro' && (\n                        <ion-icon name=\"close-circle\"></ion-icon>\n                    )}\n                    {resultado === 'quaseNaoLembrei' && (\n                        <ion-icon name=\"help-circle\"></ion-icon>\n                    )}\n                    {resultado === 'zap' && (\n                        <ion-icon name=\"checkmark-circle\"></ion-icon>\n                    )}\n                </div>\n            );\n        case 'pergunta':\n            return (\n                <div className={`card ${virado ? 'virado' : ''}`}>\n                    <div className=\"card-pergunta face\">\n                        <p>{pergunta}</p>\n                        <img\n                            id=\"setinha\"\n                            src=\"./images/setinha.svg\"\n                            alt=\"setinha\"\n                            onClick={() => setVirado(true)}\n                        />\n                    </div>\n                    <div className=\"card-resposta face\">\n                        <p>{resposta}</p>\n                        <div className=\"opcoes\">\n                            <div\n                                className=\"opcao red\"\n                                onClick={() => {\n                                    setEtapa('escondido');\n                                    setResultado('naoLembro');\n                                    setConcluidos(concluidos + 1);\n                                    setSequencia([\n                                        ...sequencia,\n                                        <div\n                                            className=\"naoLembro\"\n                                            key={Math.random()}\n                                        >\n                                            <ion-icon name=\"close-circle\"></ion-icon>\n                                        </div>,\n                                    ]);\n                                    setNaoLembrou(true);\n                                }}\n                            >\n                                <p>Não lembrei</p>\n                            </div>\n                            <div\n                                className=\"opcao orange\"\n                                onClick={() => {\n                                    setEtapa('escondido');\n                                    setResultado('quaseNaoLembrei');\n                                    setConcluidos(concluidos + 1);\n                                    setSequencia([\n                                        ...sequencia,\n                                        <div\n                                            className=\"quaseNaoLembrei\"\n                                            key={Math.random()}\n                                        >\n                                            <ion-icon name=\"help-circle\"></ion-icon>\n                                        </div>,\n                                    ]);\n                                }}\n                            >\n                                <p>Quase não lembrei</p>\n                            </div>\n                            <div\n                                className=\"opcao green\"\n                                onClick={() => {\n                                    setEtapa('escondido');\n                                    setResultado('zap');\n                                    setConcluidos(concluidos + 1);\n                                    setSequencia([\n                                        ...sequencia,\n                                        <div\n                                            className=\"zap\"\n                                            key={Math.random()}\n                                        >\n                                            <ion-icon name=\"checkmark-circle\"></ion-icon>\n                                        </div>,\n                                    ]);\n                                }}\n                            >\n                                <p>Zap!</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        default:\n            break;\n    }\n};\n\nexport default Card;\n","// import React, { useState, useEffect } from 'react';\nimport Button from './Button';\nimport './Footer.css';\n\nconst Footer = (props) => {\n    const { concluidos, cards, sequencia, finalizado, naoLembrou, setScreen } =\n        props;\n\n    if (!finalizado) {\n        return (\n            <div className=\"footer-container\">\n                <p>\n                    {concluidos}/{cards.length} CONCLUÍDOS\n                </p>\n                <div className=\"sequencia\">{sequencia}</div>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"footer-container\">\n                {naoLembrou ? (\n                    <div className=\"congrats\">\n                        <div>\n                            <img src=\"./images/sad.png\" alt=\"sad\" />{' '}\n                            <p>PUTZ!</p>\n                        </div>\n                        <p>Ainda faltaram alguns...Mas não desanime!</p>\n                    </div>\n                ) : (\n                    <div className=\"congrats\">\n                        <div>\n                            <img src=\"./images/party.png\" alt=\"party\" />{' '}\n                            <p>PARABÉNS!</p>\n                        </div>\n                        <p>Você não esqueceu de nenhum flashcard!</p>\n                    </div>\n                )}\n                <div className=\"sequencia\">{sequencia}</div>\n                <Button\n                    handleClick={() => setScreen('Welcome')}\n                    mensagem={'REINICIAR RECALL'}\n                />\n            </div>\n        );\n    }\n};\n\nexport default Footer;\n","import './Header.css';\n\nconst Header = () => {\n    return (\n        <div className=\"header-container\">\n            <img src=\"./images/logo-pequeno.png\" alt=\"logo-pequeno\" />\n            <h2>ZapRecall</h2>\n        </div>\n    );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport Card from './Card';\nimport Footer from './Footer';\nimport Header from './Header';\nimport './GameScreen.css';\n\nconst GameScreen = (props) => {\n    const { decks, setScreen, selectedDeck } = props;\n    const [concluidos, setConcluidos] = useState(0);\n    const [sequencia, setSequencia] = useState([]);\n    const [finalizado, setFinalizado] = useState(false);\n    const [naoLembrou, setNaoLembrou] = useState(false);\n    let cards = decks[selectedDeck];\n    cards.sort(() => Math.random() - 0.5);\n\n    return (\n        <div className=\"GameScreen-container\">\n            <Header />\n\n            {cards.map((elem, index) => (\n                <Card\n                    {...elem}\n                    key={index}\n                    numero={index}\n                    cards={cards}\n                    setConcluidos={setConcluidos}\n                    concluidos={concluidos}\n                    sequencia={sequencia}\n                    setSequencia={setSequencia}\n                    setFinalizado={setFinalizado}\n                    setNaoLembrou={setNaoLembrou}\n                />\n            ))}\n            <Footer\n                cards={cards}\n                concluidos={concluidos}\n                sequencia={sequencia}\n                finalizado={finalizado}\n                naoLembrou={naoLembrou}\n                setScreen={setScreen}\n            />\n        </div>\n    );\n};\n\nexport default GameScreen;\n","import React, { useState } from 'react';\nimport Welcome from './components/Welcome';\nimport './App.css';\nimport GameScreen from './components/GameScreen';\n\nconst App = () => {\n    const decks = {\n        React: [\n            {\n                pergunta: 'O que é JSX?',\n                resposta: 'Uma extensão de linguagem do JavaScript',\n            },\n            {\n                pergunta: 'O React é __',\n                resposta:\n                    'uma biblioteca JavaScript para construção de interfaces',\n            },\n            {\n                pergunta: 'Componentes devem iniciar com __ ',\n                resposta: 'letra maiúscula',\n            },\n            {\n                pergunta: 'Podemos colocar __ dentro do JSX',\n                resposta: 'expressões',\n            },\n            {\n                pergunta: 'O ReactDOM nos ajuda __',\n                resposta:\n                    'interagindo com a DOM para colocar componentes React na mesma',\n            },\n            {\n                pergunta: 'Usamos o npm para __',\n                resposta:\n                    'gerenciar os pacotes necessários e suas dependências',\n            },\n            {\n                pergunta: 'Usamos props para __ ',\n                resposta: 'passar diferentes informações para componentes ',\n            },\n            {\n                pergunta: 'Usamos estado (state) para __',\n                resposta:\n                    'dizer para o React quais informações quando atualizadas devem renderizar a tela novamente',\n            },\n        ],\n        Geografia: [\n            {\n                pergunta: 'Em que continente fica o Brasil?',\n                resposta: 'America do Sul.',\n            },\n            {\n                pergunta: 'O que é lixiviação?',\n                resposta: 'É quando a água leva os nutrientes do solo embora.',\n            },\n            {\n                pergunta: 'A terra roxa se encontra na região __',\n                resposta: 'Sul.',\n            },\n        ],\n    };\n\n    const [selectedDeck, setSelectedDeck] = useState('');\n    const [screen, setScreen] = useState('Welcome');\n\n    return (\n        <>\n            {screen === 'Welcome' && (\n                <Welcome\n                    decks={decks}\n                    setScreen={setScreen}\n                    setSelectedDeck={setSelectedDeck}\n                    selectedDeck={selectedDeck}\n                />\n            )}\n            {screen === 'GameScreen' && (\n                <GameScreen\n                    decks={decks}\n                    setScreen={setScreen}\n                    selectedDeck={selectedDeck}\n                />\n            )}\n        </>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.querySelector('.root')\n);\n"],"sourceRoot":""}